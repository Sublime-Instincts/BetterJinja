## SYNTAX TEST "Text (Jinja).sublime-syntax"

### [ COMMENTS ] ##############################################################

   ##
## ^^^ meta.embedded.comment.jinja comment.line.jinja
## ^^ punctuation.definition.comment.jinja

   ## comment
## ^^^^^^^^^^^ meta.embedded.comment.jinja comment.line.jinja
## ^^ punctuation.definition.comment.jinja
##   ^^^^^^^^^ - punctuation

#  ## comment
## <- meta.embedded.statement.jinja punctuation.section.embedded.jinja - comment
## ^^^^^^^^^^^ meta.embedded.comment.jinja comment.line.jinja
## ^^ punctuation.definition.comment.jinja
##   ^^^^^^^^^ - punctuation

   {#  #}
## ^^^^^^ meta.embedded.comment.jinja comment.block.jinja
## ^^ punctuation.definition.comment.begin.jinja
##     ^^ punctuation.definition.comment.end.jinja

{# note: commented-out template because we no longer use this
## <- meta.embedded.comment.jinja comment.block.jinja punctuation.definition.comment.begin.jinja

    {% for user in users %}
## ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.comment.jinja comment.block.jinja - source - meta.embedded.statement
        ...
    {% endfor %}
## ^^^^^^^^^^^^^^ meta.embedded.comment.jinja comment.block.jinja - source - meta.embedded.statement
#}
## <- meta.embedded.comment.jinja comment.block.jinja punctuation.definition.comment.end.jinja


### [ STATEMENT LINES ] #######################################################

   # if condition
## ^ meta.embedded.statement.jinja - source.jinja
##  ^^^^^^^^^^^^^ meta.embedded.statement.jinja source.jinja.embedded
## ^ punctuation.section.embedded.jinja
##   ^^ keyword.control.conditional.if.jinja
##      ^^^^^^^^^ variable.other.readwrite.jinja

   # elif condition
## ^ meta.embedded.statement.jinja - source.jinja
##  ^^^^^^^^^^^^^^^ meta.embedded.statement.jinja source.jinja.embedded
## ^ punctuation.section.embedded.jinja
##   ^^^^ keyword.control.conditional.elseif.jinja
##        ^^^^^^^^^ variable.other.readwrite.jinja

   # else
## ^ meta.embedded.statement.jinja - source.jinja
##  ^^^^^ meta.embedded.statement.jinja source.jinja.embedded
## ^ punctuation.section.embedded.jinja
##   ^^^^ keyword.control.conditional.else.jinja

   # endif
## ^ meta.embedded.statement.jinja - source.jinja
##  ^^^^^^ meta.embedded.statement.jinja source.jinja.embedded
## ^ punctuation.section.embedded.jinja
##   ^^^^^ keyword.control.conditional.endif.jinja

   # for item in items
## ^ meta.embedded.statement.jinja - source.jinja
##  ^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja source.jinja.embedded
## ^ punctuation.section.embedded.jinja
##   ^^^ keyword.control.loop.for.jinja
##       ^^^^ variable.other.readwrite.jinja
##            ^^ keyword.operator.iteration.in.jinja
##               ^^^^^ variable.other.readwrite.jinja
   # endfor
## ^ meta.embedded.statement.jinja - source.jinja
##  ^^^^^^^ meta.embedded.statement.jinja source.jinja.embedded
##   ^^^^^^ keyword.control.loop.endfor.jinja

# for href, caption in [('index.html', 'Index'),
                        ('about.html', 'About')]:
## <- meta.embedded.statement.jinja meta.sequence.list.jinja
## ^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja source.jinja.embedded meta.sequence.list.jinja - meta.sequence.tuple
##                      ^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja source.jinja.embedded meta.sequence.list.jinja meta.sequence.tuple.jinja
##                                             ^ meta.embedded.statement.jinja source.jinja.embedded meta.sequence.list.jinja - meta.sequence.tuple
##                                              ^ meta.embedded.statement.jinja source.jinja.embedded punctuation.section.block.jinja

## <- - meta.embedded

# endfor ## comment
## <- meta.embedded.statement.jinja punctuation.section.embedded.jinja
##^^^^^^ meta.embedded.statement.jinja source.jinja.embedded keyword.control.loop.endfor.jinja
##       ^^^^^^^^^^^ meta.embedded.comment.jinja comment.line.jinja - meta.embedded.statement - source.jinja.embedded

not a # for statement:
##    ^^^^^^^^^^^^^^^^^ - meta.embedded

### [ STATEMENT BLOCKS ] ######################################################

    {%  %}
##  ^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja - source.jinja.embedded
##    ^^ source.jinja.embedded
##      ^^ punctuation.section.embedded.end.jinja - source.jinja.embedded

    {%+  +%}
##  ^^^^^^^^ meta.embedded.statement.jinja
##  ^^^ punctuation.section.embedded.begin.jinja - source.jinja.embedded
##     ^^ source.jinja.embedded
##       ^^^ punctuation.section.embedded.end.jinja - source.jinja.embedded

    {%-  -%}
##  ^^^^^^^^ meta.embedded.statement.jinja
##  ^^^ punctuation.section.embedded.begin.jinja - source.jinja.embedded
##     ^^ source.jinja.embedded
##       ^^^ punctuation.section.embedded.end.jinja - source.jinja.embedded

    {% if elif else endif scoped %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja - source.jinja.embedded
##    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded
##                               ^^ punctuation.section.embedded.end.jinja - source.jinja.embedded
##     ^^ keyword.control.conditional.if.jinja
##        ^^^^^^^^^^^^^^^^^^^^^^ - keyword

    {% for item in items endfor %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##                              ^^ punctuation.section.embedded.end.jinja
##     ^^^ keyword.control.loop.for.jinja
##         ^^^^ variable.other.readwrite.jinja
##              ^^ keyword.operator.iteration.in.jinja
##                 ^^^^^ variable.other.readwrite.jinja
##                       ^^^^^^ - keyword


### [ BLOCK DECLARATNONS ]#####################################################

    {% block %} {% endblock %}
##  ^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^ keyword.declaration.block.jinja
##           ^^ punctuation.section.embedded.end.jinja
##              ^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##              ^^ punctuation.section.embedded.begin.jinja
##                 ^^^^^^^^ keyword.declaration.block.end.jinja
##                          ^^ punctuation.section.embedded.end.jinja

    {% block block_name %}
##  ^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^^^^^^^^^^^^^^^^^^ source.jinja.embedded
##     ^^^^^ keyword.declaration.block.jinja
##           ^^^^^^^^^^ entity.name.section.block.jinja
##                      ^^ punctuation.section.embedded.end.jinja

    # block block_name
##  ^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^^^^^^^^^^^^^^^^^ source.jinja.embedded
##    ^^^^^ keyword.declaration.block.jinja
##          ^^^^^^^^^^ entity.name.section..block.jinja

    # block block_name:
##  ^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^^^^^^^^^^^^^^^^^ source.jinja.embedded
##    ^^^^^ keyword.declaration.block.jinja
##          ^^^^^^^^^^ entity.name.section..block.jinja
##                    ^ punctuation.section.block.jinja

    # block block_name ## comment
##  ^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^^^^^^^^^^^^^^^^^ source.jinja.embedded
##    ^^^^^ keyword.declaration.block.jinja
##          ^^^^^^^^^^ entity.name.section..block.jinja
##                     ^^^^^^^^^^^ meta.embedded.comment.jinja comment.line.jinja


### [ IMPORT DECLARATNONS ]####################################################

    {% extends "index.html" %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##    ^ source.jinja.embedded - meta.import
##     ^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##     ^^^^^^^ keyword.control.import.extends.jinja
##             ^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##             ^ punctuation.definition.string.begin.jinja
##                        ^ punctuation.definition.string.end.jinja
##                          ^^ punctuation.section.embedded.end.jinja

    # extends "index.html"
##  ^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^ punctuation.section.embedded.jinja
##   ^ source.jinja.embedded - meta.import
##    ^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##    ^^^^^^^ keyword.control.import.extends.jinja
##            ^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##            ^ punctuation.definition.string.begin.jinja
##                       ^ punctuation.definition.string.end.jinja
##                        ^ - meta.embedded

    {% import 'forms.html' as forms %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##    ^ source.jinja.embedded - meta.import
##     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##     ^^^^^^ keyword.control.import.jinja
##            ^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                         ^^ keyword.operator.assignment.as.jinja
##                            ^^^^^ variable.other.readwrite.jinja
##                                  ^^ punctuation.section.embedded.end.jinja

    # import 'forms.html' as forms
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^ punctuation.section.embedded.jinja
##   ^ source.jinja.embedded - meta.import
##    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##    ^^^^^^ keyword.control.import.jinja
##           ^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                        ^^ keyword.operator.assignment.as.jinja
##                           ^^^^^ variable.other.readwrite.jinja
##                                ^ - meta.embedded

    {% from import import %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^ source.jinja.embedded - meta.import
##     ^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##     ^^^^ keyword.control.import.from.jinja
##          ^^^^^^ keyword.control.import.jinja
##                 ^^^^^^ variable.other.readwrite.jinja
##                        ^^ meta.embedded.statement.jinja punctuation.section.embedded.end.jinja

    # from import import
##  ^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^ source.jinja.embedded - meta.import
##    ^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##    ^^^^ keyword.control.import.from.jinja
##         ^^^^^^ keyword.control.import.jinja
##                ^^^^^^ variable.other.readwrite.jinja

    {% from 'forms.html' import input as input_field, textarea %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##    ^ source.jinja.embedded - meta.import
##     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##     ^^^^ keyword.control.import.from.jinja
##          ^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                       ^^^^^^ keyword.control.import.jinja
##                              ^^^^^ variable.other.readwrite.jinja
##                                    ^^ keyword.operator.assignment.as.jinja
##                                       ^^^^^^^^^^^ variable.other.readwrite.jinja
##                                                  ^ punctuation.separator.sequence.jinja
##                                                    ^^^^^^^^ variable.other.readwrite.jinja
##                                                             ^^ punctuation.section.embedded.end.jinja

    # from 'forms.html' import input as input_field, textarea
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^ punctuation.section.embedded.jinja
##   ^ source.jinja.embedded - meta.import
##    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##    ^^^^ keyword.control.import.from.jinja
##         ^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                      ^^^^^^ keyword.control.import.jinja
##                             ^^^^^ variable.other.readwrite.jinja
##                                   ^^ keyword.operator.assignment.as.jinja
##                                      ^^^^^^^^^^^ variable.other.readwrite.jinja
##                                                 ^ punctuation.separator.sequence.jinja
##                                                   ^^^^^^^^ variable.other.readwrite.jinja
##                                                           ^ - meta.embedded

    {% from "forms.html" import input with context %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##    ^ source.jinja.embedded - meta.import
##     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##     ^^^^ keyword.control.import.from.jinja
##          ^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                       ^^^^^^ keyword.control.import.jinja
##                              ^^^^^ variable.other.readwrite.jinja
##                                    ^^^^ keyword.other.jinja
##                                         ^^^^^^^ keyword.other.jinja
##                                                 ^^ punctuation.section.embedded.end.jinja

    # from "forms.html" import input with context
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^ punctuation.section.embedded.jinja
##   ^ source.jinja.embedded - meta.import
##    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.import.jinja
##    ^^^^ keyword.control.import.from.jinja
##         ^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                      ^^^^^^ keyword.control.import.jinja
##                             ^^^^^ variable.other.readwrite.jinja
##                                   ^^^^ keyword.other.jinja
##                                        ^^^^^^^ keyword.other.jinja
##                                               ^ - meta.embedded

    {% include "sidebar.html" ignore missing with context %}
##     ^^^^^^^ keyword.control.import.jinja
##             ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                            ^^^^^^ keyword.other.jinja
##                                   ^^^^^^^ keyword.other.jinja
##                                           ^^^^ keyword.other.jinja
##                                                ^^^^^^^ keyword.other.jinja

    # include "sidebar.html" ignore missing with context
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##    ^^^^^^^ keyword.control.import.jinja
##            ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                           ^^^^^^ keyword.other.jinja
##                                  ^^^^^^^ keyword.other.jinja
##                                          ^^^^ keyword.other.jinja
##                                               ^^^^^^^ keyword.other.jinja
##                                                      ^ - meta.embedded

    {% include "sidebar.html" ignore missing without context %}
##     ^^^^^^^ keyword.control.import.jinja
##             ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                            ^^^^^^ keyword.other.jinja
##                                   ^^^^^^^ keyword.other.jinja
##                                           ^^^^^^^ keyword.other.jinja
##                                                   ^^^^^^^ keyword.other.jinja

    # include "sidebar.html" ignore missing without context
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##    ^^^^^^^ keyword.control.import.jinja
##            ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                           ^^^^^^ keyword.other.jinja
##                                  ^^^^^^^ keyword.other.jinja
##                                          ^^^^^^^ keyword.other.jinja
##                                                  ^^^^^^^ keyword.other.jinja
##                                                         ^ - meta.embedded

    {% include ['special_sidebar.html', 'sidebar.html'] ignore missing %}
##     ^^^^^^^ keyword.control.import.jinja
##             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.sequence.list.jinja
##             ^ punctuation.section.sequence.begin.jinja
##              ^^^^^^^^^^^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                                    ^ punctuation.separator.sequence.jinja
##                                      ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                                                    ^ punctuation.section.sequence.end.jinja
##                                                      ^^^^^^ keyword.other.jinja
##                                                             ^^^^^^^ keyword.other.jinja

    # include ['special_sidebar.html', 'sidebar.html'] ignore missing
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##    ^^^^^^^ keyword.control.import.jinja
##            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.sequence.list.jinja
##            ^ punctuation.section.sequence.begin.jinja
##             ^^^^^^^^^^^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                                   ^ punctuation.separator.sequence.jinja
##                                     ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                                                   ^ punctuation.section.sequence.end.jinja
##                                                     ^^^^^^ keyword.other.jinja
##                                                            ^^^^^^^ keyword.other.jinja
##                                                                   ^ - meta.embedded

    # include ['special_sidebar.html',
        'sidebar.html'] ignore missing
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
## ^^^^^^^^^^^^^^^^^^^^ meta.sequence.list.jinja
##      ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                    ^ punctuation.section.sequence.end.jinja
##                      ^^^^^^ keyword.other.jinja
##                             ^^^^^^^ keyword.other.jinja
##                                    ^ - meta.embedded

### [ MACRO DECLARATNONS ]#####################################################

    {% macro %} {% endmacro %}
##  ^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^ keyword.declaration.macro.jinja
##           ^^ punctuation.section.embedded.end.jinja
##              ^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##              ^^ punctuation.section.embedded.begin.jinja
##                 ^^^^^^^^ keyword.declaration.macro.end.jinja
##                          ^^ punctuation.section.embedded.end.jinja

    {% macro my_macro(arg1, arg2:10, arg3="str") %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded
##     ^^^^^ meta.function.jinja keyword.declaration.macro.jinja
##          ^^^^^^^^^ meta.function.identifier.jinja
##           ^^^^^^^^ entity.name.function.macro.jinja
##                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function.parameters.jinja
##                   ^ punctuation.section.parameters.begin.jinja
##                    ^^^^ variable.parameter.jinja
##                        ^ punctuation.separator.parameters.jinja
##                          ^^^^ variable.parameter.jinja
##                              ^ keyword.operator.assignment.jinja
##                               ^^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##                                 ^ punctuation.separator.parameters.jinja
##                                   ^^^^ variable.parameter.jinja
##                                       ^ keyword.operator.assignment.jinja
##                                        ^^^^^ meta.string.jinja string.quoted.double.jinja
##                                             ^ punctuation.section.parameters.end.jinja
##                                               ^^ punctuation.section.embedded.end.jinja

    {% endmacro %}
##  ^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^^^^^^^^^^ source.jinja.embedded
##     ^^^^^^^^ keyword.declaration.macro.end.jinja
##              ^^ punctuation.section.embedded.end.jinja

    # macro my_macro(arg)
##  ^ punctuation.section.embedded.jinja
##   ^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded
##    ^^^^^ meta.function.jinja keyword.declaration.macro.jinja
##         ^^^^^^^^^ meta.function.identifier.jinja
##          ^^^^^^^^ entity.name.function.macro.jinja
##                  ^^^^^ meta.function.parameters.jinja
##                  ^ punctuation.section.parameters.begin.jinja
##                   ^^^ variable.parameter.jinja
##                      ^ punctuation.section.parameters.end.jinja

    # endmacro
##  ^ punctuation.section.embedded.jinja
##   ^^^^^^^^^ source.jinja.embedded
##    ^^^^^^^^ keyword.declaration.macro.end.jinja

    {% call my_macro('Hello World') %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded
##     ^^^^ keyword.other.tag.jinja
##          ^^^^^^^^ meta.function-call.identifier.jinja variable.function.jinja
##                  ^^^^^^^^^^^^^^^ meta.function-call.arguments.jinja
##                  ^ punctuation.section.arguments.begin.jinja
##                   ^^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                                ^ punctuation.section.arguments.end.jinja
##                                  ^^ punctuation.section.embedded.end.jinja
        This is a simple dialog rendered by using a macro and
        a call block.
    {% endcall %}
##  ^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^^^^^^^^^ source.jinja.embedded
##     ^^^^^^^ keyword.other.endtag.jinja
##             ^^ punctuation.section.embedded.end.jinja

### [ RAW BLOCKS ] ############################################################

    {% raw %} {% endraw %}
##  ^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^ keyword.other.tag.jinja
##         ^^ punctuation.section.embedded.end.jinja
##            ^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##            ^^ punctuation.section.embedded.begin.jinja
##               ^^^^^^ keyword.other.endtag.jinja
##                      ^^ punctuation.section.embedded.end.jinja

    {% raw %}
##  ^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^ keyword.other.tag.jinja
##         ^^ punctuation.section.embedded.end.jinja
##           ^ - meta.embedded - markup.raw

        {% raw %} {{ var }}
##     ^^^^^^^^^^^^^^^^^^^^^ markup.raw.block.jinja - meta.embedded

    {% endraw %}
## <- - meta.embedded - markup.raw
##^^ - meta.embedded - markup.raw
##  ^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^ keyword.other.endtag.jinja
##            ^^ punctuation.section.embedded.end.jinja

    # raw
##^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^^^^ source.jinja.embedded
##    ^^^ keyword.other.tag.jinja

        {% raw %} {{ var }}
##     ^^^^^^^^^^^^^^^^^^^^^ markup.raw.block.jinja - meta.embedded

    # endraw
##^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.begin.jinja
##   ^^^^^^^ source.jinja.embedded
##    ^^^^^^ keyword.other.endtag.jinja


### [ FILTER STATEMENTS ]######################################################

    {% filter %} {% endfilter %}
##  ^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^ keyword.other.tag.jinja
##            ^^ punctuation.section.embedded.end.jinja
##               ^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##               ^^ punctuation.section.embedded.begin.jinja
##                  ^^^^^^^^^ keyword.other.endtag.jinja
##                            ^^ punctuation.section.embedded.end.jinja

    {% filter upper %}
##  ^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^ source.jinja.embedded - meta.filter.jinja
##     ^^^^^^^^^^^^ source.jinja.embedded meta.filter.jinja
##     ^^^^^^ keyword.other.tag.jinja
##            ^^^^^ meta.function-call.identifier.jinja support.function.filter.jinja
##                 ^ source.jinja.embedded - meta.filter.jinja
##                  ^^ punctuation.section.embedded.end.jinja

    {% filter custom %}
##  ^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^ source.jinja.embedded - meta.filter.jinja
##     ^^^^^^^^^^^^^ source.jinja.embedded meta.filter.jinja
##     ^^^^^^ keyword.other.tag.jinja
##            ^^^^^^ meta.function-call.identifier.jinja variable.function.filter.jinja
##                  ^ source.jinja.embedded - meta.filter.jinja
##                   ^^ punctuation.section.embedded.end.jinja

    # filter
##^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^^^^^^^ source.jinja.embedded
##    ^^^^^^ meta.filter.jinja keyword.other.tag.jinja

    # endfilter
##^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^^^^^^^^^^ source.jinja.embedded
##    ^^^^^^^^^ keyword.other.endtag.jinja

    # filter upper
##^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^ source.jinja.embedded - meta.filter.jinja
##    ^^^^^^^^^^^^ source.jinja.embedded meta.filter.jinja
##    ^^^^^^ keyword.other.tag.jinja
##           ^^^^^ meta.function-call.identifier.jinja support.function.filter.jinja

    # filter custom
##^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^ source.jinja.embedded - meta.filter.jinja
##    ^^^^^^^^^^^^^ source.jinja.embedded meta.filter.jinja
##    ^^^^^^ keyword.other.tag.jinja
##           ^^^^^^ meta.function-call.identifier.jinja variable.function.filter.jinja

    # filter custom(arg + 10)
##^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^ source.jinja.embedded - meta.filter.jinja
##    ^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded meta.filter.jinja
##    ^^^^^^ keyword.other.tag.jinja
##           ^^^^^^ meta.function-call.identifier.jinja variable.function.filter.jinja
##                 ^^^^^^^^^^ meta.function-call.arguments.jinja
##                 ^ punctuation.section.arguments.begin.jinja
##                  ^^^ variable.other.readwrite.jinja
##                      ^ keyword.operator.symbol.jinja keyword.operator.arithmetic.jinja
##                        ^^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##                          ^ punctuation.section.arguments.end.jinja


### [ SET STATEMENTS ]#########################################################

    {% set %} {% endset %}
##  ^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^ keyword.declaration.variable.jinja
##         ^^ punctuation.section.embedded.end.jinja
##            ^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##            ^^ punctuation.section.embedded.begin.jinja
##               ^^^^^^ keyword.declaration.variable.jinja
##                      ^^ punctuation.section.embedded.end.jinja

    # set
##^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^^^^ source.jinja.embedded
##    ^^^ meta.declaration.jinja keyword.declaration.variable.jinja

## <- - meta.embedded

    # endset
##^^^^^^^^^^ meta.embedded.statement.jinja
##  ^ punctuation.section.embedded.jinja
##   ^^^^^^^ source.jinja.embedded
##    ^^^^^^ keyword.declaration.variable.jinja


    {% set ns = namespace() %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##     ^^^ keyword.declaration.variable.jinja
##         ^^ variable.other.readwrite.jinja
##            ^ keyword.operator.assignment.jinja
##              ^^^^^^^^^ meta.function-call.identifier.jinja support.function.global.jinja
##                       ^ meta.function-call.arguments.jinja punctuation.section.arguments.begin.jinja
##                        ^ meta.function-call.arguments.jinja punctuation.section.arguments.end.jinja

    # set ns = namespace()
##  ^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##    ^^^ keyword.declaration.variable.jinja
##        ^^ variable.other.readwrite.jinja
##           ^ keyword.operator.assignment.jinja
##             ^^^^^^^^^ meta.function-call.identifier.jinja support.function.global.jinja
##                      ^ meta.function-call.arguments.jinja punctuation.section.arguments.begin.jinja
##                       ^ meta.function-call.arguments.jinja punctuation.section.arguments.end.jinja

    {% set key, value = call_something() %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.jinja.embedded
##     ^^^ meta.declaration.jinja keyword.declaration.variable.jinja
##        ^^^^^^^^^^^^ meta.declaration.identifier.jinja
##         ^^^ variable.other.readwrite.jinja
##            ^ punctuation.separator.sequence.jinja
##              ^^^^^ variable.other.readwrite.jinja
##                    ^ keyword.operator.assignment.jinja
##                      ^^^^^^^^^^^^^^ meta.function-call.identifier.jinja variable.function.jinja
##                                    ^^ meta.function-call.arguments.jinja
##                                    ^ punctuation.section.arguments.begin.jinja
##                                     ^ punctuation.section.arguments.end.jinja
##                                       ^^ punctuation.section.embedded.end.jinja

    {% set (a, b) = test %}
##  ^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##     ^^^ meta.declaration.jinja
##        ^^^^^^^^ meta.declaration.identifier.jinja
##                ^^^^^^^ - meta.declaration
##     ^^^ keyword.declaration.variable.jinja
##         ^^^^^^ meta.sequence.tuple.jinja
##         ^ punctuation.section.sequence.begin.jinja
##          ^ variable.other.readwrite.jinja
##           ^ punctuation.separator.sequence.jinja
##             ^ variable.other.readwrite.jinja
##              ^ punctuation.section.sequence.end.jinja
##                ^ keyword.operator.assignment.jinja
##                  ^^^^ variable.other.readwrite.jinja

    # set (a, b) = test
##  ^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##    ^^^ meta.declaration.jinja
##       ^^^^^^^^ meta.declaration.identifier.jinja
##               ^^^^^^ - meta.declaration
##    ^^^ keyword.declaration.variable.jinja
##        ^^^^^^ meta.sequence.tuple.jinja
##        ^ punctuation.section.sequence.begin.jinja
##         ^ variable.other.readwrite.jinja
##          ^ punctuation.separator.sequence.jinja
##            ^ variable.other.readwrite.jinja
##             ^ punctuation.section.sequence.end.jinja
##               ^ keyword.operator.assignment.jinja
##                 ^^^^ variable.other.readwrite.jinja

    # set (a, b) = ["foo",
        "bar"]
##^^^^^^^^^^^^ meta.embedded.statement.jinja source.jinja.embedded meta.sequence.list.jinja
##      ^^^^^ meta.string.jinja string.quoted.double.jinja
##           ^ punctuation.section.sequence.end.jinja


### [ OTHER STATEMENTS ]#######################################################

    {% autoescape %} {% endautoescape %}
##  ^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^^^^ keyword.other.tag.jinja
##                ^^ punctuation.section.embedded.end.jinja
##                   ^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##                   ^^ punctuation.section.embedded.begin.jinja
##                      ^^^^^^^^^^^^^ keyword.other.endtag.jinja - meta.embedded meta.embedded
##                                    ^^ punctuation.section.embedded.end.jinja

    {% call %} {% endcall %}
##  ^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^ keyword.other.tag.jinja
##          ^^ punctuation.section.embedded.end.jinja
##             ^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##             ^^ punctuation.section.embedded.begin.jinja
##                ^^^^^^^ keyword.other.endtag.jinja
##                        ^^ punctuation.section.embedded.end.jinja

    {% trans %} {% endtrans %}
##  ^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^ keyword.other.tag.jinja
##           ^^ punctuation.section.embedded.end.jinja
##              ^^^^^^^^^^^^^^ meta.embedded.statement.jinja - meta.embedded meta.embedded
##              ^^ punctuation.section.embedded.begin.jinja
##                 ^^^^^^^^ keyword.other.endtag.jinja
##                          ^^ punctuation.section.embedded.end.jinja

    {% | list %}
##     ^^^^^^ meta.filter.jinja
##     ^ keyword.operator.assignment.pipe.jinja
##       ^^^^ support.function.filter.jinja

    {% function(arg1 = value1, arg2 = value2) %}
##    ^ - meta.function-call
##     ^^^^^^^^ meta.function-call.identifier.jinja - meta.function-call meta.function-call
##             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.jinja - meta.function-call meta.function-call
##                                           ^ - meta.function-call
##     ^^^^^^^^ variable.function.jinja
##             ^ punctuation.section.arguments.begin.jinja
##              ^^^^ variable.parameter.jinja
##                   ^ keyword.operator.assignment.jinja
##                     ^^^^^^ variable.other.readwrite.jinja
##                           ^ punctuation.separator.arguments.jinja
##                             ^^^^ variable.parameter.jinja
##                                  ^ keyword.operator.assignment.jinja
##                                    ^^^^^^ variable.other.readwrite.jinja
##                                          ^ punctuation.section.arguments.end.jinja


### [ EXPRESSION BLOCKS ] #####################################################

    {{  }}
##  ^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##      ^^ punctuation.section.embedded.end.jinja

    {{ ( }}
##  ^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^ meta.group.jinja
##     ^ punctuation.section.group.begin.jinja
##       ^^ punctuation.section.embedded.end.jinja

    {{ [ }}
##  ^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^ meta.sequence.list.jinja
##     ^ punctuation.section.sequence.begin.jinja
##       ^^ punctuation.section.embedded.end.jinja

    {{ { }}
##  ^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^ meta.mapping.jinja
##     ^ punctuation.section.mapping.begin.jinja
##       ^^ punctuation.section.embedded.end.jinja

    {{ + - * / ** // % }}
##  ^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##                     ^^ punctuation.section.embedded.end.jinja
##     ^ keyword.operator.arithmetic.jinja
##       ^ keyword.operator.arithmetic.jinja
##         ^ keyword.operator.arithmetic.jinja
##           ^ keyword.operator.arithmetic.jinja
##             ^^ keyword.operator.arithmetic.jinja
##                ^^ keyword.operator.arithmetic.jinja
##                   ^ keyword.operator.arithmetic.jinja

    {{ >= <= == != < > }}
##  ^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##                     ^^ punctuation.section.embedded.end.jinja
##     ^^ keyword.operator.comparison.jinja
##        ^^ keyword.operator.comparison.jinja
##           ^^ keyword.operator.comparison.jinja
##              ^^ keyword.operator.comparison.jinja
##                 ^ keyword.operator.comparison.jinja
##                   ^ keyword.operator.comparison.jinja

    {{ = ~ }}
##  ^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^ keyword.operator.assignment.jinja
##       ^ keyword.operator.concatenation.jinja
##         ^^ punctuation.section.embedded.end.jinja

    {{ true false True False none None }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^ constant.language.boolean.true.jinja
##          ^^^^^ constant.language.boolean.false.jinja
##                ^^^^ constant.language.boolean.true.jinja
##                     ^^^^^ constant.language.boolean.false.jinja
##                           ^^^^ constant.language.null.jinja
##                                ^^^^ constant.language.null.jinja
##                                     ^^ punctuation.section.embedded.end.jinja

    {{ 123 123_456 }}
##  ^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##         ^^^^^^^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##                 ^^ punctuation.section.embedded.end.jinja

    {{ 42.3 0.3 .5 42.1e2 123_456.789 123_456.789e1 }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##                                                  ^^ punctuation.section.embedded.end.jinja
##     ^^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##       ^ punctuation.separator.decimal.jinja
##          ^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##           ^ punctuation.separator.decimal.jinja
##              ^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##              ^ punctuation.separator.decimal.jinja
##                 ^^^^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##                   ^ punctuation.separator.decimal.jinja
##                        ^^^^^^^^^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##                               ^ punctuation.separator.decimal.jinja
##                                    ^^^^^^^^^^^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##                                           ^ punctuation.separator.decimal.jinja


    {{ "Hello, World" 'Hello, World' }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##                                   ^^ punctuation.section.embedded.end.jinja
##     ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##     ^ punctuation.definition.string.begin.jinja
##                  ^ punctuation.definition.string.end.jinja
##                    ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                    ^ punctuation.definition.string.begin.jinja
##                                 ^ punctuation.definition.string.end.jinja

    {{ [1, 2, 3, 4, 12.34] }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##                         ^^ punctuation.section.embedded.end.jinja
##     ^^^^^^^^^^^^^^^^^^^ meta.sequence.list.jinja
##     ^ punctuation.section.sequence.begin.jinja
##      ^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##       ^ punctuation.separator.sequence.jinja
##                  ^^^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##                       ^ punctuation.section.sequence.end.jinja

    {{ ["a", 'c'] }}
##  ^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##      ^^^ meta.string.jinja string.quoted.double.jinja
##         ^ punctuation.separator.sequence.jinja
##           ^^^ meta.string.jinja  string.quoted.single.jinja
##                ^^ punctuation.section.embedded.end.jinja

    {{ (1, 0.5, 'a', "b") }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^^^^^^^^^^^^ meta.sequence.tuple.jinja
##     ^ punctuation.section.sequence.begin.jinja
##      ^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##       ^ punctuation.separator.sequence.jinja
##         ^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##              ^^^ meta.string.jinja string.quoted.single.jinja
##                   ^^^ meta.string.jinja  string.quoted.double.jinja
##                      ^ punctuation.section.sequence.end.jinja
##                        ^^ punctuation.section.embedded.end.jinja

    {{ (1 + 2) (1 not in [1, 2, 3]) }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^ meta.group.jinja
##     ^ punctuation.section.group.begin.jinja
##           ^ meta.group.jinja punctuation.section.group.end.jinja
##             ^^^^^^^^^^^^^^^^^^^^ meta.group.jinja
##             ^ punctuation.section.group.begin.jinja
##                                ^ punctuation.section.group.end.jinja
##                                  ^^ punctuation.section.embedded.end.jinja

    {{ { "a": "b", 'c': 'd', "e": 123, "f": 123.456 } }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^ meta.mapping.jinja
##     ^ punctuation.section.mapping.begin.jinja
##       ^^^ meta.mapping.key.jinja meta.string.jinja string.quoted.double.jinja
##          ^ meta.mapping.jinja punctuation.separator.mapping.key-value.jinja
##           ^^^^ meta.mapping.value.jinja
##            ^^^ meta.string.jinja string.quoted.double.jinja
##               ^ punctuation.separator.mapping.pair.jinja
##                 ^^^ meta.mapping.key.jinja meta.string.jinja string.quoted.single.jinja
##                     ^^^^ meta.mapping.value.jinja
##                      ^^^ meta.string.jinja string.quoted.single.jinja
##                         ^ punctuation.separator.mapping.pair.jinja
##                           ^^^ meta.mapping.key.jinja meta.string.jinja string.quoted.double.jinja
##                              ^ meta.mapping.jinja punctuation.separator.mapping.key-value.jinja
##                               ^^^^ meta.mapping.value.jinja
##                                ^^^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##                                   ^ punctuation.separator.mapping.pair.jinja
##                                     ^^^ meta.mapping.key.jinja meta.string.jinja string.quoted.double.jinja
##                                        ^ meta.mapping.jinja punctuation.separator.mapping.key-value.jinja
##                                         ^^^^^^^^^ meta.mapping.value.jinja
##                                          ^^^^^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##                                                  ^ meta.mapping.jinja punctuation.section.mapping.end.jinja
##                                                    ^^ punctuation.section.embedded.end.jinja

    {{ not and or }}
##  ^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^ keyword.operator.logical.jinja
##         ^^^ keyword.operator.logical.jinja
##             ^^ keyword.operator.logical.jinja
##                ^^ punctuation.section.embedded.end.jinja

    {{ "foo {bar} baz" }}
##  ^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^ meta.string.jinja string.quoted.double.jinja
##          ^^^^^ meta.string.jinja meta.interpolation.jinja
##          ^ punctuation.section.interpolation.begin.jinja
##           ^^^  variable.other.readwrite.jinja
##              ^ punctuation.section.interpolation.end.jinja
##               ^^^^^ meta.string.jinja string.quoted.double.jinja
##                     ^^ punctuation.section.embedded.end.jinja

    {{ "foo {1 + 2.3} baz" }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^ meta.string.jinja string.quoted.double.jinja
##          ^^^^^^^^^ meta.string.jinja meta.interpolation.jinja
##          ^ punctuation.section.interpolation.begin.jinja
##           ^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##             ^ keyword.operator.arithmetic.jinja
##               ^^^ meta.number.float.decimal.jinja constant.numeric.value.jinja
##                  ^ punctuation.section.interpolation.end.jinja
##                   ^^^^^ meta.string.jinja string.quoted.double.jinja
##                         ^^ punctuation.section.embedded.end.jinja

    {{ "Character \" \' {{ {% escape" 'Character \" \' {{ {% escape' }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                ^^ constant.character.escape.jinja
##                   ^^ constant.character.escape.jinja
##                      ^^ constant.character.escape.jinja
##                         ^^ constant.character.escape.jinja
##                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.jinja string.quoted.single.jinja
##                                               ^^ constant.character.escape.jinja
##                                                  ^^ constant.character.escape.jinja
##                                                     ^^ constant.character.escape.jinja
##                                                        ^^ constant.character.escape.jinja
##                                                                   ^^ punctuation.section.embedded.end.jinja

    {{ "Hello {{me}} and {% you %}" }}
##     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja - meta.string meta.embedded - meta.string meta.interpolation
##            ^^ constant.character.escape.jinja
##                ^^ constant.character.escape.jinja
##                       ^^ constant.character.escape.jinja
##                              ^^ constant.character.escape.jinja

    ## Operator methods also work as expected.
    ## For example, % implements printf-style for strings:

    {{ "Hello, %s!" % name }}
##     ^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##             ^^ constant.other.placeholder.jinja
##                  ^ keyword.operator.arithmetic.jinja
##                    ^^^^ variable.other.readwrite.jinja

    {{ "Hello, %(you)s!" % (you,) }}
##     ^^^^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##             ^^^^^^^ constant.other.placeholder.jinja
##               ^^^ variable.other.placeholder.jinja
##                       ^ keyword.operator.arithmetic.jinja
##                         ^^^^^^ meta.sequence.tuple.jinja
##                         ^ punctuation.section.sequence.begin.jinja
##                          ^^^ variable.other.readwrite.jinja
##                             ^ punctuation.separator.sequence.jinja
##                              ^ punctuation.section.sequence.end.jinja

    ## Although you should prefer the .format method for that case
    ## (which is a bit contrived in the context of rendering a template):

    ## output type
    {{ "Hello, {} {!a} {!r} {!s}!".format(foo, bar, baz, boo) }}
##     ^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##             ^^ meta.string.jinja meta.interpolation.jinja
##               ^ meta.string.jinja string.quoted.double.jinja
##                ^^^^ meta.string.jinja meta.interpolation.jinja
##                ^ punctuation.section.interpolation.begin.jinja
##                 ^^ storage.modifier.conversion.jinja
##                   ^ punctuation.section.interpolation.end.jinja
##                    ^ meta.string.jinja string.quoted.double.jinja
##                     ^^^^ meta.string.jinja meta.interpolation.jinja
##                     ^ punctuation.section.interpolation.begin.jinja
##                      ^^ storage.modifier.conversion.jinja
##                        ^ punctuation.section.interpolation.end.jinja
##                         ^ meta.string.jinja string.quoted.double.jinja
##                          ^^^^ meta.string.jinja meta.interpolation.jinja
##                          ^ punctuation.section.interpolation.begin.jinja
##                           ^^ storage.modifier.conversion.jinja
##                             ^ punctuation.section.interpolation.end.jinja
##                              ^^ meta.string.jinja string.quoted.double.jinja
##                                ^ punctuation.accessor.dot.jinja
##                                 ^^^^^^ meta.function-call.identifier.jinja variable.function.method.jinja
##                                       ^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.jinja

    ## format spec given as constant
    {{ "Hello\u1012 {me:.1f}".format(me=10.213) }}
##     ^^^^^^^^^^^^^ meta.string.jinja - meta.interpolation
##                  ^^^^ meta.string.jinja meta.interpolation.jinja - meta.format-spec
##                      ^^^ meta.string.jinja meta.interpolation.jinja meta.format-spec.jinja
##                         ^ meta.string.jinja meta.interpolation.jinja - meta.format-spec
##                          ^ meta.string.jinja - meta.interpolation
##     ^^^^^^^^^^^^^ string.quoted.double.jinja
##     ^ punctuation.definition.string.begin.jinja
##           ^^^^^^ constant.character.escape.unicode.16bit.jinja
##                  ^^^^^^^^ - string
##                  ^ punctuation.section.interpolation.begin.jinja
##                   ^^ variable.other.readwrite.jinja
##                     ^ punctuation.separator.format-spec.jinja
##                      ^^^ constant.other.format-spec.jinja
##                         ^ punctuation.section.interpolation.end.jinja
##                          ^ string.quoted.double.jinja punctuation.definition.string.end.jinja
##                           ^ punctuation.accessor.dot.jinja
##                            ^^^^^^ meta.function-call.identifier.jinja variable.function.method.jinja
##                                  ^^^^^^^^^^^ meta.function-call.arguments.jinja

    ## format spec given as interpolation
    {{ "Hello\u1012 {me!a:{digits}f}".format(me, digits) }}
##     ^^^^^^^^^^^^^ meta.string.jinja - meta.interpolation
##                  ^^^^^^ meta.string.jinja meta.interpolation.jinja - meta.format-spec
##                        ^^^^^^^^ meta.string.jinja meta.interpolation.jinja meta.format-spec.jinja meta.interpolation.jinja
##                                ^ meta.string.jinja meta.interpolation.jinja meta.format-spec.jinja - meta.format-spec meta.interpolation
##                                 ^ meta.string.jinja meta.interpolation.jinja - meta.format-spec
##                                  ^ meta.string.jinja - meta.interpolation
##     ^^^^^^^^^^^^^ string.quoted.double.jinja
##     ^ punctuation.definition.string.begin.jinja
##           ^^^^^^ constant.character.escape.unicode.16bit.jinja
##                  ^^^^^^^^^^^^^^^^ - string
##                  ^ punctuation.section.interpolation.begin.jinja
##                   ^^ variable.other.readwrite.jinja
##                     ^^ storage.modifier.conversion.jinja
##                       ^ punctuation.separator.format-spec.jinja
##                        ^ punctuation.section.interpolation.begin.jinja
##                         ^^^^^^ variable.other.readwrite.jinja
##                               ^ punctuation.section.interpolation.end.jinja
##                                ^ constant.other.format-spec.jinja
##                                 ^ punctuation.section.interpolation.end.jinja
##                                  ^ string.quoted.double.jinja punctuation.definition.string.end.jinja
##                                   ^ punctuation.accessor.dot.jinja
##                                    ^^^^^^ meta.function-call.identifier.jinja variable.function.method.jinja
##                                          ^^^^^^^^^^^^ meta.function-call.arguments.jinja

    {{ foo[0] }}
##  ^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^ variable.other.readwrite.jinja
##        ^^^ meta.subscription.jinja
##        ^ punctuation.section.subscription.begin.jinja
##         ^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##          ^ punctuation.section.subscription.end.jinja
##            ^^ punctuation.section.embedded.end.jinja

    {{ foo[1:20] }}
##  ^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^ variable.other.readwrite.jinja
##        ^^^^^^ meta.subscription.jinja
##        ^ punctuation.section.subscription.begin.jinja
##         ^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##          ^ punctuation.separator.slice.jinja
##           ^^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##             ^ punctuation.section.subscription.end.jinja
##               ^^ punctuation.section.embedded.end.jinja

    {{ foo["bar"] }}
##  ^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^ variable.other.readwrite.jinja
##        ^^^^^^^ meta.subscription.jinja
##        ^ punctuation.section.subscription.begin.jinja
##         ^^^^^ meta.string.jinja string.quoted.double.jinja
##              ^ punctuation.section.subscription.end.jinja
##                ^^ punctuation.section.embedded.end.jinja

    {{ loop.index }}
##  ^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^^^^ meta.path.jinja
##     ^^^^ variable.language.loop.jinja
##         ^ punctuation.accessor.dot.jinja
##          ^^^^^ variable.other.member.jinja
##                ^^ punctuation.section.embedded.end.jinja

    {{ loop.changed() }}
##  ^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^^^^^^^^ meta.path.jinja
##     ^^^^ variable.language.loop.jinja
##         ^ punctuation.accessor.dot.jinja
##          ^^^^^^^ meta.function-call.identifier.jinja variable.function.method.jinja
##                 ^ meta.function-call.arguments.jinja punctuation.section.arguments.begin.jinja
##                  ^ meta.function-call.arguments.jinja punctuation.section.arguments.end.jinja
##                    ^^ punctuation.section.embedded.end.jinja

    {{ my_loop.index }}
##  ^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^^^^^^^ meta.path.jinja
##     ^^^^^^^ variable.other.object.jinja
##            ^ punctuation.accessor.dot.jinja
##             ^^^^^ variable.other.member.jinja
##                   ^^ punctuation.section.embedded.end.jinja

    {{ my_loop.foo.bar.baz }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^^^^^^^^^^^^^ meta.path.jinja
##     ^^^^^^^ variable.other.object.jinja
##            ^ punctuation.accessor.dot.jinja
##             ^^^ variable.other.object.jinja
##                ^ punctuation.accessor.dot.jinja
##                 ^^^ variable.other.object.jinja
##                    ^ punctuation.accessor.dot.jinja
##                     ^^^ variable.other.member.jinja
##                         ^^ punctuation.section.embedded.end.jinja

    {{ my_loop.foo[10 + buz["20"]].bar().baz }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.path.jinja
##     ^^^^^^^ variable.other.object.jinja
##            ^ punctuation.accessor.dot.jinja
##             ^^^ variable.other.object.jinja
##                ^^^^^^^^^ meta.subscription.jinja - meta.subscription meta.subscription
##                ^ punctuation.section.subscription.begin.jinja
##                 ^^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##                    ^ keyword.operator.arithmetic.jinja
##                      ^^^ variable.other.readwrite.jinja
##                         ^^^^^^ meta.subscription.jinja meta.subscription.jinja
##                         ^ punctuation.section.subscription.begin.jinja
##                          ^^^^ meta.string.jinja string.quoted.double.jinja
##                              ^^ punctuation.section.subscription.end.jinja
##                                ^ punctuation.accessor.dot.jinja
##                                 ^^^ meta.function-call.identifier.jinja variable.function.method.jinja
##                                    ^^ meta.function-call.arguments.jinja
##                                      ^ punctuation.accessor.dot.jinja
##                                       ^^^ variable.other.member.jinja
##                                           ^^ punctuation.section.embedded.end.jinja

    {{ _ }}
##  ^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^ variable.language.anonymous.jinja
##       ^^ punctuation.section.embedded.end.jinja

    {{ _("Text to translate") }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^ meta.function-call.identifier.jinja
##      ^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.jinja
##     ^ support.function.global.jinja
##      ^ punctuation.section.arguments.begin.jinja
##       ^^^^^^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                          ^ punctuation.section.arguments.end.jinja
##                            ^^ punctuation.section.embedded.end.jinja

    {{ gettext("Text to translate") }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^^^^^^^ meta.function-call.identifier.jinja
##            ^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.jinja
##     ^^^^^^^ support.function.global.jinja
##            ^ punctuation.section.arguments.begin.jinja
##             ^^^^^^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                                ^ punctuation.section.arguments.end.jinja
##                                  ^^ punctuation.section.embedded.end.jinja

    {{ "foo &lt; bar" | e }}
##     ^^^^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                    ^^^ meta.filter.jinja
##                    ^ keyword.operator.assignment.pipe.jinja
##                      ^ meta.function-call.identifier.jinja support.function.filter.jinja

    {{ "foo < bar" | safe }}
##     ^^^^^^^^^^^ meta.string.jinja string.quoted.double.jinja
##                 ^^^^^^ meta.filter.jinja
##                 ^ keyword.operator.assignment.pipe.jinja
##                   ^^^^ meta.function-call.identifier.jinja support.function.filter.jinja

    {{ foo | list }}
##     ^^^ variable.other.readwrite.jinja
##         ^^^^^^ meta.filter.jinja
##         ^ keyword.operator.assignment.pipe.jinja
##           ^^^^ support.function.filter.jinja

    {{ foo | my_list }}
##     ^^^ variable.other.readwrite.jinja
##         ^^^^^^^^^ meta.filter.jinja
##         ^ keyword.operator.assignment.pipe.jinja
##           ^^^^^^^ variable.function.filter.jinja

    {{ list|join(', ' }}  {# incomplete groups don't break highlighting #}
##  ^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##    ^^^^^^^^^^^^^^^^ source.jinja.embedded
##     ^^^^ variable.other.readwrite.jinja
##         ^^^^^^^^^^^ meta.filter.jinja
##         ^ keyword.operator.symbol.jinja keyword.operator.assignment.pipe.jinja
##          ^^^^ meta.function-call.identifier.jinja support.function.filter.jinja
##              ^^^^^^ meta.function-call.arguments.jinja
##              ^ punctuation.section.arguments.begin.jinja
##               ^^^^ meta.string.jinja string.quoted.single.jinja
##               ^ punctuation.definition.string.begin.jinja
##                  ^ punctuation.definition.string.end.jinja
##                    ^^ punctuation.section.embedded.end.jinja

    {{ foo | default([]) | list | join(', ') }}
##     ^^^ variable.other.readwrite.jinja
##         ^^^^^^^^^^^^^ meta.filter.jinja
##         ^ keyword.operator.assignment.pipe.jinja
##           ^^^^^^^ meta.function-call.identifier.jinja support.function.filter.jinja
##                  ^^^^ meta.function-call.arguments.jinja
##                  ^ punctuation.section.arguments.begin.jinja
##                   ^ meta.sequence.list.jinja punctuation.section.sequence.begin.jinja
##                    ^ meta.sequence.list.jinja punctuation.section.sequence.end.jinja
##                     ^ punctuation.section.arguments.end.jinja
##                       ^^^^^^ meta.filter.jinja
##                       ^ keyword.operator.assignment.pipe.jinja
##                         ^^^^ meta.function-call.identifier.jinja support.function.filter.jinja
##                              ^^^^^^^^^^^^ meta.filter.jinja
##                              ^ keyword.operator.assignment.pipe.jinja
##                                ^^^^ meta.function-call.identifier.jinja support.function.filter.jinja
##                                    ^^^^^^ meta.function-call.arguments.jinja
##                                    ^ punctuation.section.arguments.begin.jinja
##                                     ^^^^ meta.string.jinja string.quoted.single.jinja
##                                         ^ punctuation.section.arguments.end.jinja

    {{ a | abs() | striptags() }}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.expression.jinja
##  ^^ punctuation.section.embedded.begin.jinja
##     ^ variable.other.readwrite.jinja
##       ^^^^^^^ meta.filter.jinja
##       ^ keyword.operator.assignment.pipe.jinja
##         ^^^ meta.function-call.identifier.jinja support.function.filter.jinja
##            ^ meta.function-call.arguments.jinja punctuation.section.arguments.begin.jinja
##             ^ meta.function-call.arguments.jinja punctuation.section.arguments.end.jinja
##               ^^^^^^^^^^^^^ meta.filter.jinja
##               ^ keyword.operator.assignment.pipe.jinja
##                 ^^^^^^^^^ meta.function-call.identifier.jinja support.function.filter.jinja
##                          ^ meta.function-call.arguments.jinja punctuation.section.arguments.begin.jinja
##                           ^ meta.function-call.arguments.jinja punctuation.section.arguments.end.jinja
##                             ^^ punctuation.section.embedded.end.jinja

    {{ subl_cfg.config | dict2items }}
##                     ^^^^^^^^^^^^ meta.filter.jinja
##                     ^ keyword.operator.assignment.pipe.jinja
##                       ^^^^^^^^^^ meta.function-call.identifier.jinja variable.function.filter.jinja

    {{ foo | int is in range(10) }}
##     ^^^ variable.other.readwrite.jinja
##         ^^^^^ meta.filter.jinja
##         ^ keyword.operator.assignment.pipe.jinja
##           ^^^ support.function.filter.jinja
##               ^^ keyword.operator.logical.jinja
##                  ^^ support.function.test.jinja
##                     ^^^^^ meta.function-call.identifier.jinja support.function.global.jinja
##                          ^^^^ meta.function-call.arguments.jinja
##                          ^ punctuation.section.arguments.begin.jinja
##                           ^^ meta.number.integer.decimal.jinja constant.numeric.value.jinja
##                             ^ punctuation.section.arguments.end.jinja

    {{ foo is defined }}
##     ^^^ variable.other.readwrite.jinja
##         ^^ keyword.operator.logical.jinja
##            ^^^^^^^ support.function.test.jinja

    {{ foo is my_test }}
##     ^^^ variable.other.readwrite.jinja
##         ^^ keyword.operator.logical.jinja
##            ^^^^^^^ variable.function.test.jinja

    {{ foo is not defined }}
##     ^^^ variable.other.readwrite.jinja
##         ^^ keyword.operator.logical.jinja
##            ^^^ keyword.operator.logical.jinja
##                ^^^^^^^ support.function.test.jinja

    {{ foo is not my_test }}
##     ^^^ variable.other.readwrite.jinja
##         ^^ keyword.operator.logical.jinja
##            ^^^ keyword.operator.logical.jinja
##                ^^^^^^^ variable.function.test.jinja

### [ REGRESSION TESTS ] ######################################################

    {% for key, (v1, v2) in my_dict.items() %}
##  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.embedded.statement.jinja
##     ^^^ keyword.control.loop.for.jinja
##         ^^^ variable.other.readwrite.jinja
##            ^ punctuation.separator.sequence.jinja
##              ^^^^^^^^ meta.sequence.tuple.jinja
##                       ^^ keyword.operator.iteration.in.jinja
##                          ^^^^^^^ variable.other.object.jinja
##                                 ^ punctuation.accessor.dot.jinja
##                                  ^^^^^ meta.function-call.identifier.jinja variable.function.method.jinja
##                                       ^ meta.function-call.arguments.jinja punctuation.section.arguments.begin.jinja
##                                        ^ meta.function-call.arguments.jinja punctuation.section.arguments.end.jinja

## Issue #5

    {{ poetry_bin_path | default('/usr/local/bin/poetry') }}
##                       ^^^^^^^ support.function.filter.jinja

## Issue #6

    {% if test is false %}
##             ^^ keyword.operator.logical.jinja
##                ^^^^^ support.function.test.jinja

    {% if test eq false %}
##             ^^ - keyword - support.function - variable.function
##                ^^^^^ constant.language.boolean.false.jinja

    {% if 1 is in [1, 2] %}
##          ^^ keyword.operator.logical.jinja
##             ^^ support.function.test.jinja

    {% if 1 in [1, 2] %}
##          ^^ keyword.operator.iteration.in.jinja

    {% set foo = -1 %}
##               ^ keyword.operator.arithmetic.jinja

## Issue 12

{{
    | combine({'openAtLogin': false})
##  ^ keyword.operator.assignment.pipe.jinja
##    ^^^^^^^ meta.function-call.identifier.jinja variable.function.filter.jinja
##           ^ meta.function-call.arguments.jinja - meta.mapping
##            ^ meta.function-call.arguments.jinja meta.mapping.jinja
##             ^^^^^^^^^^^^^ meta.function-call.arguments.jinja meta.mapping.key.jinja meta.string.jinja
##                          ^ meta.function-call.arguments.jinja meta.mapping.jinja
##                           ^^^^^^ meta.function-call.arguments.jinja meta.mapping.value.jinja
##                            ^^^^^ constant.language.boolean.false.jinja
##                                 ^ meta.function-call.arguments.jinja meta.mapping.jinja
##                                  ^ meta.function-call.arguments.jinja - meta.mapping

    | to_json(sort_keys=true)
##  ^ keyword.operator.assignment.pipe.jinja
##    ^^^^^^^ meta.function-call.identifier.jinja variable.function.filter.jinja
##           ^^^^^^^^^^^^^^^^ meta.function-call.arguments.jinja
##           ^ punctuation.section.arguments.begin.jinja
##            ^^^^^^^^^ variable.parameter.jinja
##                     ^ keyword.operator.assignment.jinja
##                      ^^^^ constant.language.boolean.true.jinja
##                          ^ punctuation.section.arguments.end.jinja
}}