%YAML 1.2
---
# http://www.sublimetext.com/docs/syntax.html
name: HTML (Jinja)
scope: text.html.jinja
version: 2

file_extensions:
  - jinja
  - jinja2
  - j2
  - html.jinja
  - html.jinja2
  - html.j2
  - htm.jinja
  - htm.jinja2
  - htm.j2
  # Django
  - djt
  - djhtml
  - dj.html
  - html.djt

extends: Packages/HTML/HTML.sublime-syntax

variables:
  tag_name_start: (?:[A-Za-z]|{{)

contexts:

  prototype:
    - meta_prepend: true
    - include: Text (Jinja).sublime-syntax

  main:
    - meta_prepend: true
    - meta_scope: meta.template.jinja

###[ CUSTOM HTML ]############################################################

  tag-other:
    # override original context to add support for `{{tag_name_start}}` variable
    # required until ST4174
    - match: </?(?={{tag_name_start}})
      scope: punctuation.definition.tag.begin.html
      push:
        - tag-other-content
        - tag-other-name

  cdata-content:
    - meta_prepend: true
    - meta_include_prototype: false
    - include: Text (Jinja).sublime-syntax#interpolations

  script-javascript-content:
    - meta_include_prototype: false
    - match: \s*((<!\[)(CDATA)(\[))
      captures:
        1: meta.tag.sgml.cdata.html
        2: punctuation.definition.tag.begin.html
        3: keyword.declaration.cdata.html
        4: punctuation.definition.tag.begin.html
      pop: 1  # make sure to match only once
      embed: scope:source.js.jinja
      embed_scope: meta.tag.sgml.cdata.html source.js.embedded.html
      escape: \]\]>
      escape_captures:
        0: meta.tag.sgml.cdata.html punctuation.definition.tag.end.html
    - match: '{{script_content_begin}}'
      captures:
        1: comment.block.html punctuation.definition.comment.begin.html
      pop: 1  # make sure to match only once
      embed: scope:source.js.jinja
      embed_scope: source.js.embedded.html
      escape: '{{script_content_end}}'
      escape_captures:
        1: source.js.embedded.html
        2: comment.block.html punctuation.definition.comment.end.html
        3: source.js.embedded.html
        4: comment.block.html punctuation.definition.comment.end.html

  script-json-content:
    - meta_include_prototype: false
    - match: \s*((<!\[)(CDATA)(\[))
      captures:
        1: meta.tag.sgml.cdata.html
        2: punctuation.definition.tag.begin.html
        3: keyword.declaration.cdata.html
        4: punctuation.definition.tag.begin.html
      pop: 1  # make sure to match only once
      embed: scope:source.json.jinja
      embed_scope: meta.tag.sgml.cdata.html source.json.embedded.html
      escape: \]\]>
      escape_captures:
        0: meta.tag.sgml.cdata.html punctuation.definition.tag.end.html
    - match: '{{script_content_begin}}'
      captures:
        1: comment.block.html punctuation.definition.comment.begin.html
      pop: 1  # make sure to match only once
      embed: scope:source.json.jinja
      embed_scope: source.json.embedded.html
      escape: '{{script_content_end}}'
      escape_captures:
        1: source.json.embedded.html
        2: comment.block.html punctuation.definition.comment.end.html
        3: source.json.embedded.html
        4: comment.block.html punctuation.definition.comment.end.html

  style-css-content:
    - meta_include_prototype: false
    - match: \s*((<!\[)(CDATA)(\[))
      captures:
        1: meta.tag.sgml.cdata.html
        2: punctuation.definition.tag.begin.html
        3: keyword.declaration.cdata.html
        4: punctuation.definition.tag.begin.html
      pop: 1  # make sure to match only once
      embed: scope:source.css.jinja
      embed_scope: meta.tag.sgml.cdata.html source.css.embedded.html
      escape: \]\]>
      escape_captures:
        0: meta.tag.sgml.cdata.html punctuation.definition.tag.end.html
    - match: '{{style_content_begin}}'
      captures:
        1: comment.block.html punctuation.definition.comment.begin.html
      pop: 1  # make sure to match only once
      embed: scope:source.css.jinja
      embed_scope: source.css.embedded.html
      escape: '{{style_content_end}}'
      escape_captures:
        1: source.css.embedded.html
        2: comment.block.html punctuation.definition.comment.end.html
        3: source.css.embedded.html
        4: comment.block.html punctuation.definition.comment.end.html

  tag-attributes:
    # Include jinja statement tags to prevent them being scoped meta.attribute-with-value
    - meta_prepend: true
    - include: Text (Jinja).sublime-syntax#jinja-comment-lines
    - include: Text (Jinja).sublime-syntax#jinja-statement-lines
    - include: Text (Jinja).sublime-syntax#jinja-comment-tags
    - include: Text (Jinja).sublime-syntax#jinja-statement-tags

  tag-event-attribute-value:
    - meta_include_prototype: false
    - match: \"
      scope: string.quoted.double.html punctuation.definition.string.begin.html
      set: tag-event-attribute-value-double-quoted-body
    - match: \'
      scope: string.quoted.single.html punctuation.definition.string.begin.html
      set: tag-event-attribute-value-single-quoted-body
    - include: else-pop

  tag-event-attribute-value-double-quoted-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.html
    - meta_content_scope: source.js.embedded.html
    - match: \"
      scope: string.quoted.double.html punctuation.definition.string.end.html
      pop: 1
    - include: scope:source.js.embedded.string.quoted.double.jinja

  tag-event-attribute-value-single-quoted-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.html
    - meta_content_scope: source.js.embedded.html
    - match: \'
      scope: string.quoted.single.html punctuation.definition.string.end.html
      pop: 1
    - include: scope:source.js.embedded.string.quoted.single.jinja

  tag-style-attribute-value:
    - meta_include_prototype: false
    - match: \"
      scope: string.quoted.double.html punctuation.definition.string.begin.html
      set: tag-style-attribute-value-double-quoted-body
    - match: \'
      scope: string.quoted.single.html punctuation.definition.string.begin.html
      set: tag-style-attribute-value-single-quoted-body
    - include: else-pop

  tag-style-attribute-value-double-quoted-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.html
    - meta_content_scope: source.css.embedded.html
    - match: \"
      scope: string.quoted.double.html punctuation.definition.string.end.html
      pop: 1
    - include: scope:source.css.embedded.string.quoted.double.jinja

  tag-style-attribute-value-single-quoted-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.html
    - meta_content_scope: source.css.embedded.html
    - match: \'
      scope: string.quoted.single.html punctuation.definition.string.end.html
      pop: 1
    - include: scope:source.css.embedded.string.quoted.single.jinja

  tag-attribute-value-content:
    - meta_prepend: true
    - include: Text (Jinja).sublime-syntax#interpolations

  strings-common-content:
    - meta_prepend: true
    - include: Text (Jinja).sublime-syntax#interpolations
