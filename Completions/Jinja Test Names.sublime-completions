{
	"scope": "source.jinja meta.function-call.identifier",
	"completions": [
		{
			"trigger": "boolean",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the object is a boolean value.",
		},
		{
			"trigger": "callable",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return whether the object is callable.",
		},
		{
			"trigger": "defined",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is defined.",
		},
		{
			"trigger": "divisibleby",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Check if a variable is divisible by a number.",
		},
		{
			"trigger": "eq",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Same as <code>a == b</code>.",
		},
		{
			"trigger": "escaped",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Check if the value is escaped.",
		},
		{
			"trigger": "even",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is even.",
		},
		{
			"trigger": "false",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the object is False.",
		},
		{
			"trigger": "filter",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Check if a filter exists by name.",
		},
		{
			"trigger": "float",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the object is a float.",
		},
		{
			"trigger": "ge",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Same as <code>a >= b</code>.",
		},
		{
			"trigger": "gt",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Same as <code>a > b.</code>",
		},
		{
			"trigger": "in",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Check if value is in sequence.",
		},
		{
			"trigger": "integer",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the object is an integer.",
		},
		{
			"trigger": "iterable",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Check if itâ€™s possible to iterate over an object.",
		},
		{
			"trigger": "le",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Same as a <= b.",
		},
		{
			"trigger": "lower",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is lowercased.",
		},
		{
			"trigger": "lt",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Same as <code>a < b</code>.",
		},
		{
			"trigger": "mapping",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the object is a mapping (dict etc.).",
		},
		{
			"trigger": "ne",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Same as <code>a != b</code>.",
		},
		{
			"trigger": "none",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is none.",
		},
		{
			"trigger": "number",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is a number.",
		},
		{
			"trigger": "odd",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is odd.",
		},
		{
			"trigger": "sameas",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Check if an object points to the same memory address than another object.",
		},
		{
			"trigger": "sequence",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is a sequence (iterables).",
		},
		{
			"trigger": "string",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the object is a string.",
		},
		{
			"trigger": "test",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Check if a test exists by name.",
		},
		{
			"trigger": "true",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the object is True.",
		},
		{
			"trigger": "undefined",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is defined.",
		},
		{
			"trigger": "upper",
			"kind": ["namespace", "t", "Jinja test"],
			"annotation": "Jinja test",
			"details": "Return <code>true</code> if the variable is upper-cased.",
		},
	],
}
