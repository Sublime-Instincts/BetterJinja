[
	// Auto-pair braces also in front of , : ; so starting embeddings in CSS properties and values works well.

	{
		"keys": ["{"],
		"command": "insert_snippet",
		"args": {
			"contents": "{$0}"
		},
		"context": [
			{ "key": "selector", "operand": "meta.template.jinja - meta.template.jinja meta.embedded - meta.template.jinja string" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:[ \t\\)\\]\\},:;]|$)", "match_all": true }
		]
	},

	// Auto-pair braces also in front of closing ' and " in strings

	{
		"keys": ["{"],
		"command": "insert_snippet",
		"args": {
			"contents": "{$0}"
		},
		"context": [
			{ "key": "selector", "operand": "meta.template.jinja string" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:[ \t\\)\\]\\}\"',:;]|$)", "match_all": true }
		]
	},

	// Bindings for inserting and removing comment block.

	// Expand {|} to {# | #} when # is pressed
	{
		"keys": ["#"],
		"command": "insert_snippet",
		"args": {
			"contents": "# ${0} #"
		},
		"context": [
			{ "key": "selector", "operand": "meta.template.jinja - meta.template.jinja meta.embedded" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^}", "match_all": true }
		]
	},
	// Reduce {#|#} to | when backspace is pressed
	{
		"keys": ["backspace"],
		"command": "chain",
		"args": {
			"commands": [
				{"command": "left_delete" },
				{"command": "right_delete" },
				{"command": "left_delete" },
				{"command": "right_delete" }
			]
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.comment.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{#$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^#}", "match_all": true }
		]
	},
	// Expand {#|#} to {# | #} when space is pressed
	{
		"keys": [" "],
		"command": "insert_snippet",
		"args": {
			"contents": " ${0} "
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.comment.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{#$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^#}", "match_all": true }
		]
	},
	// Reduce {# | #} to {#|#} when backspace is pressed
	{
		"keys": ["backspace"],
		"command": "chain",
		"args": {
			"commands": [
				{"command": "left_delete" },
				{"command": "right_delete" }
			]
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.comment.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{# $", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^ #}", "match_all": true }
		]
	},

	// Bindings for inserting and removing statement block.

	// Expand {|} to {% | %} when % is pressed
	{
		"keys": ["%"],
		"command": "insert_snippet",
		"args": {
			"contents": "% ${0} %"
		},
		"context": [
			{ "key": "selector", "operand": "meta.template.jinja - meta.template.jinja meta.embedded" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^}", "match_all": true }
		]
	},
	// Reduce {%|%} to | when backspace is pressed
	{
		"keys": ["backspace"],
		"command": "chain",
		"args": {
			"commands": [
				{"command": "left_delete" },
				{"command": "right_delete" },
				{"command": "left_delete" },
				{"command": "right_delete" }
			]
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.statement.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{%$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^%}", "match_all": true }
		]
	},
	// Expand {%|%} to {% | %} when space is pressed
	{
		"keys": [" "],
		"command": "insert_snippet",
		"args": {
			"contents": " ${0} "
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.statement.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{%$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^%}", "match_all": true }
		]
	},
	// Reduce {% | %} to {%|%} when backspace is pressed
	{
		"keys": ["backspace"],
		"command": "chain",
		"args": {
			"commands": [
				{"command": "left_delete" },
				{"command": "right_delete" }
			]
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.statement.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{% $", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^ %}", "match_all": true }
		]
	},

	// Bindings for inserting and removing expression block.

	// Expand {|} to {{ | }} when { is pressed
	{
		"keys": ["{"],
		"command": "insert_snippet",
		"args": {
			"contents": "{ ${0} }"
		},
		"context": [
			{ "key": "selector", "operand": "meta.template.jinja - meta.template.jinja meta.embedded" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^}", "match_all": true }
		]
	},
	// Reduce {{|}} to | when backspace is pressed
	{
		"keys": ["backspace"],
		"command": "chain",
		"args": {
			"commands": [
				{"command": "left_delete" },
				{"command": "right_delete" },
				{"command": "left_delete" },
				{"command": "right_delete" }
			]
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.expression.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^}}", "match_all": true }
		]
	},
	// Expand {{|}} to {{ | }} when space is pressed
	{
		"keys": [" "],
		"command": "insert_snippet",
		"args": {
			"contents": " ${0} "
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.statement.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{{$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^}}", "match_all": true }
		]
	},
	// Reduce {{ | }} to {{|}} when backspace is pressed
	{
		"keys": ["backspace"],
		"command": "chain",
		"args": {
			"commands": [
				{"command": "left_delete" },
				{"command": "right_delete" }
			]
		},
		"context": [
			{ "key": "selector", "operand": "meta.embedded.expression.jinja" },
			{ "key": "setting.auto_match_enabled" },
			{ "key": "selection_empty", "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "{{ $", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^ }}", "match_all": true }
		]
	},
	{
		"keys": ["enter"],
		"command": "run_macro_file",
		"args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"},
		"context": [
			{ "key": "selector", "operand": "meta.template.jinja - source.jinja" },
			{ "key": "setting.auto_indent", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "%\\}\\s*$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\{%", "match_all": true }
		]
	}
]
